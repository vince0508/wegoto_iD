{
  "name": "google-closure-compiler",
  "version": "20150901.0.0",
  "description": "A JavaScript checker and optimizer",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/google/closure-compiler.git"
  },
  "keywords": [
    "javascript",
    "compiler",
    "optimizer",
    "minifier",
    "closure"
  ],
  "main": "package.json",
  "author": {
    "name": "The Closure Compiler Authors"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/google/closure-compiler/issues"
  },
  "homepage": "https://developers.google.com/closure/compiler/",
  "readme": "# [Google Closure Compiler](https://developers.google.com/closure/compiler/)\n\n[![Build Status](https://travis-ci.org/google/closure-compiler.svg?branch=master)](https://travis-ci.org/google/closure-compiler)\n\nThe [Closure Compiler](https://developers.google.com/closure/compiler/) is a tool for making JavaScript download and run faster. It is a true compiler for JavaScript. Instead of compiling from a source language to machine code, it compiles from JavaScript to better JavaScript. It parses your JavaScript, analyzes it, removes dead code and rewrites and minimizes what's left. It also checks syntax, variable references, and types, and warns about common JavaScript pitfalls.\n\n## Getting Started\n * [Download the latest version](http://dl.google.com/closure-compiler/compiler-latest.zip) ([Release details here](https://github.com/google/closure-compiler/wiki/Releases))\n * [Download a specific version](https://github.com/google/closure-compiler/wiki/Binary-Downloads). Also available via:\n   - [Maven](https://github.com/google/closure-compiler/wiki/Maven)\n   - [NPM](https://www.npmjs.com/package/google-closure-compiler)\n * See the [Google Developers Site](https://developers.google.com/closure/compiler/docs/gettingstarted_app) for documentation including instructions for running the compiler from the command line.\n\n## Options for Getting Help\n1. Post in the [Closure Compiler Discuss Group](https://groups.google.com/forum/#!forum/closure-compiler-discuss)\n2. Ask a question on [Stack Overflow](http://stackoverflow.com/questions/tagged/google-closure-compiler)\n3. Consult the [FAQ](https://github.com/google/closure-compiler/wiki/FAQ)\n\n## Building it Yourself\n\nNote: The Closure Compiler requires [Java 7 or higher](http://www.java.com/).\n\n### Using [Ant](http://ant.apache.org/)\n\n1. Download the [Ant build tool](http://ant.apache.org/bindownload.cgi).\n\n2. At the root of the source tree, there is an Ant file named ```build.xml```.\n   To use it, navigate to the same directory and type the command\n\n    ```\n    ant jar\n    ```\n\n    This will produce a jar file called ```build/compiler.jar```.\n\n### Using [Eclipse](http://www.eclipse.org/)\n\n1. Download and open the [Eclipse IDE](http://www.eclipse.org/).\n2. Navigate to ```File > New > Project ...``` and create a Java Project. Give\n   the project a name.\n3. Select ```Create project from existing source``` and choose the root of the\n   checked-out source tree as the existing directory.\n3. Navigate to the ```build.xml``` file. You will see all the build rules in\n   the Outline pane. Run the ```jar``` rule to build the compiler in\n   ```build/compiler.jar```.\n\n## Running\n\nOn the command line, at the root of this project, type\n\n```\njava -jar build/compiler.jar\n```\n\nThis starts the compiler in interactive mode. Type\n\n```javascript\nvar x = 17 + 25;\n```\n\nthen hit \"Enter\", then hit \"Ctrl-Z\" (on Windows) or \"Ctrl-D\" (on Mac or Linux)\nand \"Enter\" again. The Compiler will respond:\n\n```javascript\nvar x=42;\n```\n\nThe Closure Compiler has many options for reading input from a file, writing\noutput to a file, checking your code, and running optimizations. To learn more,\ntype\n\n```\njava -jar compiler.jar --help\n```\n\nMore detailed information about running the Closure Compiler is available in the\n[documentation](http://code.google.com/closure/compiler/docs/gettingstarted_app.html).\n\n## Compiling Multiple Scripts\n\nIf you have multiple scripts, you should compile them all together with one\ncompile command.\n\n```bash\njava -jar compiler.jar --js_output_file=out.js in1.js in2.js in3.js ...\n```\n\nYou can also use minimatch-style globs.\n\n```bash\n# Recursively include all js files in subdirs\njava -jar compiler.jar --js_output_file=out.js 'src/**.js'\n\n# Recursively include all js files in subdirs, exclusing test files.\n# Use single-quotes, so that bash doesn't try to expand the '!'\njava -jar compiler.jar --js_output_file=out.js 'src/**.js' '!**_test.js'\n```\n\nThe Closure Compiler will concatenate the files in the order they're passed at\nthe command line.\n\nIf you're using globs or many files, you may start to run into\nproblems with managing dependencies between scripts. In this case, you should\nuse the [Closure Library](https://developers.google.com/closure/library/). It\ncontains functions for enforcing dependencies between scripts, and Closure Compiler\nwill re-order the inputs automatically.\n\n## How to Contribute\n### Reporting a bug\n1. First make sure that it is really a bug and not simply the way that Closure Compiler works (especially true for ADVANCED_OPTIMIZATIONS).\n * Check the [official documentation](https://developers.google.com/closure/compiler/)\n * Consult the [FAQ](https://github.com/google/closure-compiler/wiki/FAQ)\n * Search on [Stack Overflow](http://stackoverflow.com/questions/tagged/google-closure-compiler) and in the [Closure Compiler Discuss Group](https://groups.google.com/forum/#!forum/closure-compiler-discuss)\n2. If you still think you have found a bug, make sure someone hasn't already reported it. See the list of [known issues](https://github.com/google/closure-compiler/issues).\n3. If it hasn't been reported yet, post a new issue. Make sure to add enough detail so that the bug can be recreated. The smaller the reproduction code, the better.\n\n### Suggesting a Feature\n1. Consult the [FAQ](https://github.com/google/closure-compiler/wiki/FAQ) to make sure that the behaviour you would like isn't specifically excluded (such as string inlining).\n2. Make sure someone hasn't requested the same thing. See the list of [known issues](https://github.com/google/closure-compiler/issues).\n3. Read up on [what type of feature requests are accepted](https://github.com/google/closure-compiler/wiki/FAQ#how-do-i-submit-a-feature-request-for-a-new-type-of-optimization).\n4. Submit your reqest as an issue.\n\n### Submitting patches\n1. All contributors must sign a contributor license agreement (CLA).\n   A CLA basically says that you own the rights to any code you contribute,\n   and that you give us permission to use that code in Closure Compiler.\n   You maintain the copyright on that code.\n   If you own all the rights to your code, you can fill out an\n   [individual CLA](http://code.google.com/legal/individual-cla-v1.0.html).\n   If your employer has any rights to your code, then they also need to fill out\n   a [corporate CLA](http://code.google.com/legal/corporate-cla-v1.0.html).\n   If you don't know if your employer has any rights to your code, you should\n   ask before signing anything.\n   By default, anyone with an @google.com email address already has a CLA\n   signed for them.\n2. To make sure your changes are of the type that will be accepted, ask about your patch on the [Closure Compiler Discuss Group](https://groups.google.com/forum/#!forum/closure-compiler-discuss)\n3. Fork the repository.\n4. Make your changes.\n5. Submit a pull request for your changes. A project developer will review your work and then merge your request into the project.\n\n## Closure Compiler License\n\nCopyright 2009 The Closure Compiler Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n## Dependency Licenses\n\n### Rhino\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td>\n      <code>src/com/google/javascript/rhino</code>, <code>test/com/google/javascript/rhino</code>\n    </td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>http://www.mozilla.org/rhino</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>1.5R3, with heavy modifications</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Netscape Public License and MPL / GPL dual license</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>A partial copy of Mozilla Rhino. Mozilla Rhino is an\nimplementation of JavaScript for the JVM.  The JavaScript\nparse tree data structures were extracted and modified\nsignificantly for use by Google's JavaScript compiler.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>The packages have been renamespaced. All code not\nrelevant to the parse tree has been removed. A JsDoc parser and static typing\nsystem have been added.</td>\n  </tr>\n</table>\n\n### Args4j\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/args4j.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>https://args4j.dev.java.net/</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>2.0.26</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>MIT</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>args4j is a small Java class library that makes it easy to parse command line\noptions/arguments in your CUI application.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### Guava Libraries\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/guava.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>https://github.com/google/guava</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>18.0</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Apache License 2.0</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Google's core Java libraries.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### JSR 305\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/jsr305.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>http://code.google.com/p/jsr-305/</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>svn revision 47</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>BSD License</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Annotations for software defect detection.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### JUnit\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/junit.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>http://sourceforge.net/projects/junit/</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>4.11</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Common Public License 1.0</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>A framework for writing and running automated tests in Java.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### Protocol Buffers\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/protobuf-java.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>http://code.google.com/p/protobuf/</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>2.5.0</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>New BSD License</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Supporting libraries for protocol buffers,\nan encoding of structured data.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### Truth\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/truth.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>https://github.com/google/truth</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>0.24</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Apache License 2.0</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Assertion/Proposition framework for Java unit tests</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### Ant\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td>\n      <code>lib/ant.jar</code>, <code>lib/ant-launcher.jar</code>\n    </td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>http://ant.apache.org/bindownload.cgi</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>1.8.1</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Apache License 2.0</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Ant is a Java based build tool. In theory it is kind of like \"make\"\nwithout make's wrinkles and with the full portability of pure java code.</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### GSON\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>lib/gson.jar</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>https://code.google.com/p/google-gson/</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>2.2.4</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Apache license 2.0</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>A Java library to convert JSON to Java objects and vice-versa</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>None</td>\n  </tr>\n</table>\n\n### Node.js Closure Compiler Externs\n\n<table>\n  <tr>\n    <td>Code Path</td>\n    <td><code>contrib/nodejs</code></td>\n  </tr>\n\n  <tr>\n    <td>URL</td>\n    <td>https://github.com/dcodeIO/node.js-closure-compiler-externs</td>\n  </tr>\n\n  <tr>\n    <td>Version</td>\n    <td>e891b4fbcf5f466cc4307b0fa842a7d8163a073a</td>\n  </tr>\n\n  <tr>\n    <td>License</td>\n    <td>Apache 2.0 license</td>\n  </tr>\n\n  <tr>\n    <td>Description</td>\n    <td>Type contracts for NodeJS APIs</td>\n  </tr>\n\n  <tr>\n    <td>Local Modifications</td>\n    <td>Substantial changes to make them compatible with NpmCommandLineRunner.</td>\n  </tr>\n</table>\n",
  "readmeFilename": "README.md",
  "_id": "google-closure-compiler@20150901.0.0",
  "_shasum": "3d01c6cade65790a9bfb4e30b2158b7635acbade",
  "_resolved": "https://registry.npmjs.org/google-closure-compiler/-/google-closure-compiler-20150901.0.0.tgz",
  "_from": "https://registry.npmjs.org/google-closure-compiler/-/google-closure-compiler-20150901.0.0.tgz"
}
