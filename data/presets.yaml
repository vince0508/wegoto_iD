en:
  presets:
    categories:
      category-poa:
        name: Point of alert
      category-poi:
        name: Point of interest
      category-road:
        name: Road Features
    fields:
      Wego:
        # 'Wego=*'
        label: Wego
      access:
        # 'access=*, foot=*, motor_vehicle=*, bicycle=*, horse=*'
        label: Allowed Access
        options:
          designated:
            # access=designated
            description: Access permitted according to signs or specific local laws
            # access=designated
            title: Designated
          destination:
            # access=destination
            description: Access permitted only to reach a destination
            # access=destination
            title: Destination
          dismount:
            # access=dismount
            description: Access permitted but rider must dismount
            # access=dismount
            title: Dismount
          'no':
            # access=no
            description: Access not permitted to the general public
            # access=no
            title: Prohibited
          permissive:
            # access=permissive
            description: Access permitted until such time as the owner revokes the permission
            # access=permissive
            title: Permissive
          private:
            # access=private
            description: Access permitted only with permission of the owner on an individual basis
            # access=private
            title: Private
          'yes':
            # access=yes
            description: Access permitted by law; a right of way
            # access=yes
            title: Allowed
        # access field placeholder
        placeholder: Not Specified
        types:
          access: All
          bicycle: Bicycles
          foot: Foot
          horse: Horses
          motor_vehicle: Motor Vehicles
      access_simple:
        # 'access=*'
        label: Allowed Access
        # access_simple field placeholder
        placeholder: 'yes'
      access_toilets:
        # 'access=*'
        label: Access
      address:
        # 'addr:city=*, addr:postcode=*'
        label: Address
        placeholders:
          city: City
          postcode: Postcode
      admin_level:
        # 'admin_level=*'
        label: Admin Level
      aerialway:
        # 'aerialway=*'
        label: Type
      aerialway/access:
        # 'aerialway:access=*'
        label: Access
        options:
          # 'aerialway:access=both'
          both: Both
          # 'aerialway:access=entry'
          entry: Entry
          # 'aerialway:access=exit'
          exit: Exit
      aerialway/bubble:
        # 'aerialway:bubble=*'
        label: Bubble
      aerialway/capacity:
        # 'aerialway:capacity=*'
        label: Capacity (per hour)
        # aerialway/capacity field placeholder
        placeholder: '500, 2500, 5000...'
      aerialway/duration:
        # 'aerialway:duration=*'
        label: Duration (minutes)
        # aerialway/duration field placeholder
        placeholder: '1, 2, 3...'
      aerialway/heating:
        # 'aerialway:heating=*'
        label: Heated
      aerialway/occupancy:
        # 'aerialway:occupancy=*'
        label: Occupancy
        # aerialway/occupancy field placeholder
        placeholder: '2, 4, 8...'
      aerialway/summer/access:
        # 'aerialway:summer:access=*'
        label: Access (summer)
        options:
          # 'aerialway:summer:access=both'
          both: Both
          # 'aerialway:summer:access=entry'
          entry: Entry
          # 'aerialway:summer:access=exit'
          exit: Exit
      aeroway:
        # 'aeroway=*'
        label: Type
      amenity:
        # 'amenity=*'
        label: Type
      area/highway:
        # 'area:highway=*'
        label: Type
      artist:
        # 'artist_name=*'
        label: Artist
      artwork_type:
        # 'artwork_type=*'
        label: Type
      atm:
        # 'atm=*'
        label: ATM
      backrest:
        # 'backrest=*'
        label: Backrest
      barrier:
        # 'barrier=*'
        label: Type
      bench:
        # 'bench=*'
        label: Bench
      bicycle_parking:
        # 'bicycle_parking=*'
        label: Type
      bin:
        # 'bin=*'
        label: Waste Bin
      boundary:
        # 'boundary=*'
        label: Type
      brand:
        # 'brand=*'
        label: Brand
      building:
        # 'building=*'
        label: Building
      building_area:
        # 'building=*'
        label: Building
      capacity:
        # 'capacity=*'
        label: Capacity
        # capacity field placeholder
        placeholder: '50, 100, 200...'
      cardinal_direction:
        # 'direction=*'
        label: Direction
        options:
          # direction=E
          E: East
          # direction=ENE
          ENE: East-northeast
          # direction=ESE
          ESE: East-southeast
          # direction=N
          'N': North
          # direction=NE
          NE: Northeast
          # direction=NNE
          NNE: North-northeast
          # direction=NNW
          NNW: North-northwest
          # direction=NW
          NW: Northwest
          # direction=S
          S: South
          # direction=SE
          SE: Southeast
          # direction=SSE
          SSE: South-southeast
          # direction=SSW
          SSW: South-southwest
          # direction=SW
          SW: Southwest
          # direction=W
          W: West
          # direction=WNW
          WNW: West-northwest
          # direction=WSW
          WSW: West-southwest
      chanfrein_wegoto:
        # 'crossing:bevel=*'
        label: Bevel
      city_wegoto:
        # 'addr:city=*'
        label: City
      clock_direction:
        # 'direction=*'
        label: Direction
        options:
          # direction=anticlockwise
          anticlockwise: Counterclockwise
          # direction=clockwise
          clockwise: Clockwise
      collection_times:
        # 'collection_times=*'
        label: Collection Times
      construction:
        # 'construction=*'
        label: Type
      content:
        # 'content=*'
        label: Contents
      country:
        # 'country=*'
        label: Country
      covered:
        # 'covered=*'
        label: Covered
      cp_wegoto:
        # 'addr:postcode=*'
        label: Post Code
      craft:
        # 'craft=*'
        label: Type
      crop:
        # 'crop=*'
        label: Crop
      crossing:
        # 'crossing=*'
        label: Type
      cuisine:
        # 'cuisine=*'
        label: Cuisine
      currency_multi:
        # 'currency:=*'
        label: Currency Types
      cycleway:
        # 'cycleway:left=*, cycleway:right=*'
        label: Bike Lanes
        options:
          # lane=yes
          lane:
            description: A bike lane separated from auto traffic by a painted line
            title: Standard bike lane
          # none=yes
          none:
            description: No bike lane
            title: None
          # opposite=yes
          opposite:
            description: A bike lane that travels in both directions on a one-way street
            title: Contraflow bike lane
          # opposite_lane=yes
          opposite_lane:
            description: A bike lane that travels in the opposite direction of traffic
            title: Opposite bike lane
          # share_busway=yes
          share_busway:
            description: A bike lane shared with a bus lane
            title: Bike lane shared with bus
          # shared_lane=yes
          shared_lane:
            description: A bike lane with no separation from auto traffic
            title: Shared bike lane
          # track=yes
          track:
            description: A bike lane separated from traffic by a physical barrier
            title: Bike track
        # cycleway field placeholder
        placeholder: none
        types:
          'cycleway:left': Left side
          'cycleway:right': Right side
      delivery:
        # 'delivery=*'
        label: Delivery
      denomination:
        # 'denomination=*'
        label: Denomination
      denotation:
        # 'denotation=*'
        label: Denotation
      description:
        # 'description=*'
        label: Description
      diaper:
        # 'diaper=*'
        label: Diaper Changing Available
      dock:
        # 'dock=*'
        label: Type
      drive_through:
        # 'drive_through=*'
        label: Drive-Through
      electrified:
        # 'electrified=*'
        label: Electrification
        options:
          # electrified=contact_line
          contact_line: Contact Line
          # electrified=no
          'no': 'No'
          # electrified=rail
          rail: Electrified Rail
          # electrified=yes
          'yes': Yes (unspecified)
        # electrified field placeholder
        placeholder: 'Contact Line, Electrified Rail...'
      elevation:
        # 'ele=*'
        label: Elevation
      emergency:
        # 'emergency=*'
        label: Emergency
      entrance:
        # 'entrance=*'
        label: Type
      except:
        # 'except=*'
        label: Exceptions
      fax:
        # 'fax=*'
        label: Fax
        # fax field placeholder
        placeholder: +31 42 123 4567
      fee:
        # 'fee=*'
        label: Fee
      fire_hydrant/type:
        # 'fire_hydrant:type=*'
        label: Type
        options:
          # 'fire_hydrant:type=pillar'
          pillar: Pillar/Aboveground
          # 'fire_hydrant:type=pond'
          pond: Pond
          # 'fire_hydrant:type=underground'
          underground: Underground
          # 'fire_hydrant:type=wall'
          wall: Wall
      fixme:
        # 'fixme=*'
        label: Fix Me
      forme_trottoir_wegoto:
        # 'crossing:shape=*'
        label: Crossing shape
        options:
          # 'crossing:shape=curved:left'
          'curved:left': Left Curved
          # 'crossing:shape=curved:right'
          'curved:right': Right Curved
          # 'crossing:shape=other'
          other: Other
          # 'crossing:shape=straight'
          straight: Straight
        # forme_trottoir_wegoto field placeholder
        placeholder: 'Droit, arrondi, ...'
      fuel:
        # 'fuel=*'
        label: Fuel
      fuel_multi:
        # 'fuel:=*'
        label: Fuel Types
      gauge:
        # 'gauge=*'
        label: Gauge
      gender:
        # 'male=*, female=*, unisex=*'
        label: Gender
        options:
          # female=yes
          female: Female
          # male=yes
          male: Male
          # unisex=yes
          unisex: Unisex
        # gender field placeholder
        placeholder: Unknown
      generator/method:
        # 'generator:method=*'
        label: Method
      generator/source:
        # 'generator:source=*'
        label: Source
      generator/type:
        # 'generator:type=*'
        label: Type
      golf_hole:
        # 'ref=*'
        label: Reference
        # golf_hole field placeholder
        placeholder: Hole number (1-18)
      handicap:
        # 'handicap=*'
        label: Handicap
        # handicap field placeholder
        placeholder: 1-18
      handrail:
        # 'handrail=*'
        label: Handrail
      hauteur_trottoir_wegoto:
        # 'height_curb=*'
        label: Height curb
      highway:
        # 'highway=*'
        label: Type
      historic:
        # 'historic=*'
        label: Type
      hoops:
        # 'hoops=*'
        label: Hoops
        # hoops field placeholder
        placeholder: '1, 2, 4...'
      iata:
        # 'iata=*'
        label: IATA
      icao:
        # 'icao=*'
        label: ICAO
      incline:
        # 'incline=*'
        label: Incline
      incline_steps:
        # 'incline=*'
        label: Incline
        options:
          # incline=down
          down: Down
          # incline=up
          up: Up
      incline_wegoto:
        # 'incline=*'
        label: Incline
        # incline_wegoto field placeholder
        placeholder: ' En % '
      information:
        # 'information=*'
        label: Type
      internet_access:
        # 'internet_access=*'
        label: Internet Access
        options:
          # internet_access=no
          'no': 'No'
          # internet_access=terminal
          terminal: Terminal
          # internet_access=wired
          wired: Wired
          # internet_access=wlan
          wlan: Wifi
          # internet_access=yes
          'yes': 'Yes'
      island_high_wegoto:
        # 'island:high=*'
        label: high of Island
      island_incline_wegoto:
        # 'island:incline=*'
        label: Incline of Island
        # island_incline_wegoto field placeholder
        placeholder: 'En % '
      island_kerb_wegoto:
        # 'island:kerb=*'
        label: Kerb of Island
      island_tactile_paving_wegoto:
        # 'island_tactile_paving:e/s=*'
        label: Tactile Paving of Island
        options:
          # 'island_tactile_paving:e/s=limited:1:l'
          'limited:1:l': Etat 1
          # 'island_tactile_paving:e/s=limited:1:m'
          'limited:1:m': ' Etat 1'
          # 'island_tactile_paving:e/s=limited:1:r'
          'limited:1:r': Etat 1
          # 'island_tactile_paving:e/s=limited:2:l'
          'limited:2:l': Etat 1
          # 'island_tactile_paving:e/s=limited:2:m'
          'limited:2:m': Etat 1
          # 'island_tactile_paving:e/s=limited:2:r'
          'limited:2:r': Etat 1
          # 'island_tactile_paving:e/s=no'
          'no': Non présent
          # 'island_tactile_paving:e/s=yes:l'
          'yes:l': Etat 1
          # 'island_tactile_paving:e/s=yes:m'
          'yes:m': Etat 1
          # 'island_tactile_paving:e/s=yes:r'
          'yes:r': Etat 1
        # island_tactile_paving_wegoto field placeholder
        placeholder: BEV
      island_width_wegoto:
        # 'island_width=*'
        label: Type of island (cm)
        options:
          # island_width=chicane
          chicane: 'chicane '
          # island_width=lower_150
          lower_150: ' type lower 150'
          # island_width=lower_180
          lower_180: type 150-180
          # island_width=lower_230
          lower_230: type 180-230
          # island_width=lower_270
          lower_270: type 230-270
        # island_width_wegoto field placeholder
        placeholder: 'Largueur < 150, Largeur entre 150-180, ...'
      kerb:
        # 'kerb=*'
        label: Kerb
        # kerb field placeholder
        placeholder: 'En % '
      kerb_steps:
        # 'kerb=*'
        label: Kerb
        options:
          # kerb=down
          down: Down
          # kerb=up
          up: Up
      lamp_type:
        # 'lamp_type=*'
        label: Type
      landuse:
        # 'landuse=*'
        label: Type
      lanes:
        # 'lanes=*'
        label: Lanes
        # lanes field placeholder
        placeholder: '1, 2, 3...'
      largeur_traverse:
        # 'width=*'
        label: 'Width '
        # largeur_traverse field placeholder
        placeholder: En cm
      layer:
        # 'layer=*'
        label: Layer
      leaf_cycle:
        # 'leaf_cycle=*'
        label: Leaf Cycle
        options:
          # leaf_cycle=deciduous
          deciduous: Deciduous
          # leaf_cycle=evergreen
          evergreen: Evergreen
          # leaf_cycle=mixed
          mixed: Mixed
          # leaf_cycle=semi_deciduous
          semi_deciduous: Semi-Deciduous
          # leaf_cycle=semi_evergreen
          semi_evergreen: Semi-Evergreen
      leaf_cycle_singular:
        # 'leaf_cycle=*'
        label: Leaf Cycle
        options:
          # leaf_cycle=deciduous
          deciduous: Deciduous
          # leaf_cycle=evergreen
          evergreen: Evergreen
          # leaf_cycle=semi_deciduous
          semi_deciduous: Semi-Deciduous
          # leaf_cycle=semi_evergreen
          semi_evergreen: Semi-Evergreen
      leaf_type:
        # 'leaf_type=*'
        label: Leaf Type
        options:
          # leaf_type=broadleaved
          broadleaved: Broadleaved
          # leaf_type=leafless
          leafless: Leafless
          # leaf_type=mixed
          mixed: Mixed
          # leaf_type=needleleaved
          needleleaved: Needleleaved
      leaf_type_singular:
        # 'leaf_type=*'
        label: Leaf Type
        options:
          # leaf_type=broadleaved
          broadleaved: Broadleaved
          # leaf_type=leafless
          leafless: Leafless
          # leaf_type=needleleaved
          needleleaved: Needleleaved
      leisure:
        # 'leisure=*'
        label: Type
      length:
        # 'length=*'
        label: Length (Meters)
      level:
        # 'level=*'
        label: Level
      levels:
        # 'building:levels=*'
        label: Levels
        # levels field placeholder
        placeholder: '2, 4, 6...'
      line_left:
        # 'line:left=*'
        label: Line left
        options:
          # 'line:left=bollard'
          bollard: Bollard
          # 'line:left=diagonal_cross'
          diagonal_cross: Diagonal cross
          # 'line:left=gardener_box'
          gardener_box: Gardener box
          # 'line:left=hedge'
          hedge: Hedge
          # 'line:left=no'
          'no': Nothing
          # 'line:left=post'
          post: Post
          # 'line:left=railing'
          railing: Railing
          # 'line:left=ref'
          ref: Ref
          # 'line:left=sidewalk'
          sidewalk: Sidewalk
          # 'line:left=sound_ref'
          sound_ref: Sound ref
          # 'line:left=tree'
          tree: Tree
      line_right:
        # 'line:right=*'
        label: Line right
        options:
          # 'line:right=bollard'
          bollard: Bollard
          # 'line:right=diagonal_cross'
          diagonal_cross: Diagonal cross
          # 'line:right=gardener_box'
          gardener_box: Dardener box
          # 'line:right=hedge'
          hedge: Hedge
          # 'line:right=no'
          'no': Nothing
          # 'line:right=post'
          post: Post
          # 'line:right=railing'
          railing: Railing
          # 'line:right=ref'
          ref: Ref
          # 'line:right=sidewalk'
          sidewalk: Sidewalk
          # 'line:right=sound_ref'
          sound_ref: Sound ref
          # 'line:right=tree'
          tree: Tree
      lit:
        # 'lit=*'
        label: Lit
      location:
        # 'location=*'
        label: Location
      man_made:
        # 'man_made=*'
        label: Type
      marquage_wegoto:
        # 'crossing:ref=*'
        label: Crossing reference
        options:
          # 'crossing:ref=dammaged'
          dammaged: Dammaged
          # 'crossing:ref=other'
          other: Other
          # 'crossing:ref=temporary'
          temporary: Temporary
          # 'crossing:ref=unmarked'
          unmarked: Unmarked
          # 'crossing:ref=zebra'
          zebra: Zebra
        # marquage_wegoto field placeholder
        placeholder: 'Bande blanche, absence de marquage, ...'
      maxspeed:
        # 'maxspeed=*'
        label: Speed Limit
        # maxspeed field placeholder
        placeholder: '40, 50, 60...'
      maxstay:
        # 'maxstay=*'
        label: Max Stay
      mtb/scale:
        # 'mtb:scale=*'
        label: Mountain Biking Difficulty
        options:
          # 'mtb:scale=0'
          '0': '0: Solid gravel/packed earth, no obstacles, wide curves'
          # 'mtb:scale=1'
          '1': '1: Some loose surface, small obstacles, wide curves'
          # 'mtb:scale=2'
          '2': '2: Much loose surface, large obstacles, easy hairpins'
          # 'mtb:scale=3'
          '3': '3: Slippery surface, large obstacles, tight hairpins'
          # 'mtb:scale=4'
          '4': '4: Loose surface or boulders, dangerous hairpins'
          # 'mtb:scale=5'
          '5': '5: Maximum difficulty, boulder fields, landslides'
          # 'mtb:scale=6'
          '6': '6: Not rideable except by the very best mountain bikers'
        # mtb/scale field placeholder
        placeholder: '0, 1, 2, 3...'
      mtb/scale/imba:
        # 'mtb:scale:imba=*'
        label: IMBA Trail Difficulty
        options:
          # 'mtb:scale:imba=0'
          '0': Easiest (white circle)
          # 'mtb:scale:imba=1'
          '1': Easy (green circle)
          # 'mtb:scale:imba=2'
          '2': Medium (blue square)
          # 'mtb:scale:imba=3'
          '3': Difficult (black diamond)
          # 'mtb:scale:imba=4'
          '4': Extremely Difficult (double black diamond)
        # mtb/scale/imba field placeholder
        placeholder: 'Easy, Medium, Difficult...'
      mtb/scale/uphill:
        # 'mtb:scale:uphill=*'
        label: Mountain Biking Uphill Difficulty
        options:
          # 'mtb:scale:uphill=0'
          '0': '0: Avg. incline <10%, gravel/packed earth, no obstacles'
          # 'mtb:scale:uphill=1'
          '1': '1: Avg. incline <15%, gravel/packed earth, few small objects'
          # 'mtb:scale:uphill=2'
          '2': '2: Avg. incline <20%, stable surface, fistsize rocks/roots'
          # 'mtb:scale:uphill=3'
          '3': '3: Avg. incline <25%, variable surface, fistsize rocks/branches'
          # 'mtb:scale:uphill=4'
          '4': '4: Avg. incline <30%, poor condition, big rocks/branches'
          # 'mtb:scale:uphill=5'
          '5': '5: Very steep, bike generally needs to be pushed or carried'
        # mtb/scale/uphill field placeholder
        placeholder: '0, 1, 2, 3...'
      name:
        # 'name=*'
        label: Name
        # name field placeholder
        placeholder: Street
      natural:
        # 'natural=*'
        label: Natural
      network:
        # 'network=*'
        label: Network
      note:
        # 'note=*'
        label: Note
      obstacle_wegoto:
        # 'crossing:obstacle=*'
        label: Crossing obstacle
        options:
          # 'crossing:obstacle=no'
          'no': 'No'
          # 'crossing:obstacle=yes'
          'yes': 'Yes'
        # obstacle_wegoto field placeholder
        placeholder: "Pas d'obstacle, rail,  ..."
      office:
        # 'office=*'
        label: Type
      oneway:
        # 'oneway=*'
        label: One Way
        options:
          # oneway=no
          'no': 'No'
          # oneway=undefined
          undefined: Assumed to be No
          # oneway=yes
          'yes': 'Yes'
      oneway_yes:
        # 'oneway=*'
        label: One Way
        options:
          # oneway=no
          'no': 'No'
          # oneway=undefined
          undefined: Assumed to be Yes
          # oneway=yes
          'yes': 'Yes'
      opening_hours:
        # 'opening_hours=*'
        label: Hours
      operator:
        # 'operator=*'
        label: Operator
      par:
        # 'par=*'
        label: Par
        # par field placeholder
        placeholder: '3, 4, 5...'
      park_ride:
        # 'park_ride=*'
        label: Park and Ride
      parking:
        # 'parking=*'
        label: Type
        options:
          # parking=carports
          carports: Carports
          # parking=garage_boxes
          garage_boxes: Garage Boxes
          # parking=lane
          lane: Roadside Lane
          # parking=multi-storey
          multi-storey: Multilevel
          # parking=sheds
          sheds: Sheds
          # parking=surface
          surface: Surface
          # parking=underground
          underground: Underground
      payment_multi:
        # 'payment:=*'
        label: Payment Types
      phone:
        # 'phone=*'
        label: Phone
        # phone field placeholder
        placeholder: +31 42 123 4567
      piste/difficulty:
        # 'piste:difficulty=*'
        label: Difficulty
        options:
          # 'piste:difficulty=advanced'
          advanced: Advanced (black diamond)
          # 'piste:difficulty=easy'
          easy: Easy (green circle)
          # 'piste:difficulty=expert'
          expert: Expert (double black diamond)
          # 'piste:difficulty=extreme'
          extreme: Extreme (climbing equipment required)
          # 'piste:difficulty=freeride'
          freeride: Freeride (off-piste)
          # 'piste:difficulty=intermediate'
          intermediate: Intermediate (blue square)
          # 'piste:difficulty=novice'
          novice: Novice (instructional)
        # piste/difficulty field placeholder
        placeholder: 'Easy, Intermediate, Advanced...'
      piste/grooming:
        # 'piste:grooming=*'
        label: Grooming
        options:
          # 'piste:grooming=backcountry'
          backcountry: Backcountry
          # 'piste:grooming=classic'
          classic: Classic
          # 'piste:grooming=classic+skating'
          classic+skating: Classic and Skating
          # 'piste:grooming=mogul'
          mogul: Mogul
          # 'piste:grooming=scooter'
          scooter: Scooter/Snowmobile
          # 'piste:grooming=skating'
          skating: Skating
      piste/type:
        # 'piste:type=*'
        label: Type
        options:
          # 'piste:type=downhill'
          downhill: Downhill
          # 'piste:type=hike'
          hike: Hike
          # 'piste:type=ice_skate'
          ice_skate: Ice Skate
          # 'piste:type=nordic'
          nordic: Nordic
          # 'piste:type=playground'
          playground: Playground
          # 'piste:type=skitour'
          skitour: Skitour
          # 'piste:type=sled'
          sled: Sled
          # 'piste:type=sleigh'
          sleigh: Sleigh
          # 'piste:type=snow_park'
          snow_park: Snow Park
      place:
        # 'place=*'
        label: Type
      population:
        # 'population=*'
        label: Population
      poteau_droit_h_wegoto:
        # 'crossing:bollard:right:high=*'
        label: Right high crossing bollard
      poteau_droit_wegoto:
        # 'crossing:bollard:right=*'
        label: Right crossing bollard
        options:
          # 'crossing:bollard:right=barrier'
          barrier: Barrier
          # 'crossing:bollard:right=contrasted'
          contrasted: Contrasted
          # 'crossing:bollard:right=no'
          'no': No bollard
          # 'crossing:bollard:right=other'
          other: Other
          # 'crossing:bollard:right=yes'
          'yes': 'Yes'
      poteau_gauche_h_wegoto:
        # 'crossing:bollard:left:high=*'
        label: Left high crossing bollard
      poteau_gauche_wegoto:
        # 'crossing:bollard:left=*'
        label: Left crossing bollard
        options:
          # 'crossing:bollard:left=barrier'
          barrier: Barrier
          # 'crossing:bollard:left=contrasted'
          contrasted: Contrasted
          # 'crossing:bollard:left=no'
          'no': No bollard
          # 'crossing:bollard:left=other'
          other: Other
          # 'crossing:bollard:left=yes'
          'yes': 'Yes'
      power:
        # 'power=*'
        label: Type
      power_supply:
        # 'power_supply=*'
        label: Power Supply
      railway:
        # 'railway=*'
        label: Type
      recycling_accepts:
        # 'recycling:=*'
        label: Accepts
      ref:
        # 'ref=*'
        label: Reference
      relation:
        # 'type=*'
        label: Type
      religion:
        # 'religion=*'
        label: Religion
      restriction:
        # 'restriction=*'
        label: Type
      restrictions:
        label: Turn Restrictions
      route:
        # 'route=*'
        label: Type
      route_master:
        # 'route_master=*'
        label: Type
      sac_scale:
        # 'sac_scale=*'
        label: Hiking Difficulty
        options:
          # sac_scale=alpine_hiking
          alpine_hiking: 'T4: Alpine Hiking'
          # sac_scale=demanding_alpine_hiking
          demanding_alpine_hiking: 'T5: Demanding Alpine Hiking'
          # sac_scale=demanding_mountain_hiking
          demanding_mountain_hiking: 'T3: Demanding Mountain Hiking'
          # sac_scale=difficult_alpine_hiking
          difficult_alpine_hiking: 'T6: Difficult Alpine Hiking'
          # sac_scale=hiking
          hiking: 'T1: Hiking'
          # sac_scale=mountain_hiking
          mountain_hiking: 'T2: Mountain Hiking'
        # sac_scale field placeholder
        placeholder: 'Mountain Hiking, Alpine Hiking...'
      sanitary_dump_station:
        # 'sanitary_dump_station=*'
        label: Toilet Disposal
      seasonal:
        # 'seasonal=*'
        label: Seasonal
      service:
        # 'service=*'
        label: Type
      service/bicycle/chain_tool:
        # 'service:bicycle:chain_tool=*'
        label: Chain Tool
        options:
          # 'service:bicycle:chain_tool=no'
          'no': 'No'
          # 'service:bicycle:chain_tool=undefined'
          undefined: Assumed to be No
          # 'service:bicycle:chain_tool=yes'
          'yes': 'Yes'
      service/bicycle/pump:
        # 'service:bicycle:pump=*'
        label: Air Pump
        options:
          # 'service:bicycle:pump=no'
          'no': 'No'
          # 'service:bicycle:pump=undefined'
          undefined: Assumed to be No
          # 'service:bicycle:pump=yes'
          'yes': 'Yes'
      service_rail:
        # 'service=*'
        label: Service Type
        options:
          # service=crossover
          crossover: Crossover
          # service=siding
          siding: Siding
          # service=spur
          spur: Spur
          # service=yard
          yard: Yard
      shelter:
        # 'shelter=*'
        label: Shelter
      shelter_type:
        # 'shelter_type=*'
        label: Type
      shop:
        # 'shop=*'
        label: Type
      shoulder_left:
        # 'shoulder:left=*'
        label: Shoulder left
        options:
          # 'shoulder:left=angled_parking'
          angled_parking: Angled parking
          # 'shoulder:left=bicycle'
          bicycle: Bicycle
          # 'shoulder:left=building'
          building: Building
          # 'shoulder:left=designated_parking'
          designated_parking: Designated_parking
          # 'shoulder:left=free_space'
          free_space: Free space
          # 'shoulder:left=gap'
          gap: Gap
          # 'shoulder:left=grass'
          grass: Grass
          # 'shoulder:left=house'
          house: House
          # 'shoulder:left=longside_parking'
          longside_parking: Longside parking
          # 'shoulder:left=rail'
          rail: Rail
          # 'shoulder:left=road'
          road: Road
          # 'shoulder:left=vegetation'
          vegetation: Vegetation
          # 'shoulder:left=wall'
          wall: Wall
      shoulder_right:
        # 'shoulder:right=*'
        label: Shoulder right
        options:
          # 'shoulder:right=angled_parking'
          angled_parking: Angled parking
          # 'shoulder:right=bicycle'
          bicycle: Bicycle
          # 'shoulder:right=building'
          building: Building
          # 'shoulder:right=designated_parking'
          designated_parking: Designated Parking
          # 'shoulder:right=free_space'
          free_space: Free Space
          # 'shoulder:right=gap'
          gap: Gap
          # 'shoulder:right=grass'
          grass: Grass
          # 'shoulder:right=house'
          house: House
          # 'shoulder:right=longside_parking'
          longside_parking: Longside Parking
          # 'shoulder:right=rail'
          rail: Rail
          # 'shoulder:right=road'
          road: Road
          # 'shoulder:right=vegetation'
          vegetation: Vegetation
          # 'shoulder:right=wall'
          wall: Wall
      site:
        # 'site=*'
        label: Type
      sloped_curb:
        # 'sloped_curb=*'
        label: Sloped Curb
      smoking:
        # 'smoking=*'
        label: Smoking
        options:
          # smoking=dedicated
          dedicated: "Dedicated to smokers (e.g. smokers' club)"
          # smoking=isolated
          isolated: 'In smoking areas, physically isolated'
          # smoking=no
          'no': No smoking anywhere
          # smoking=outside
          outside: Allowed outside
          # smoking=separated
          separated: 'In smoking areas, not physically isolated'
          # smoking=yes
          'yes': Allowed everywhere
        # smoking field placeholder
        placeholder: 'No, Separated, Yes...'
      smoothness:
        # 'smoothness=*'
        label: Smoothness
        options:
          # smoothness=bad
          bad: 'Robust Wheels: trekking bike, car, rickshaw'
          # smoothness=excellent
          excellent: 'Thin Rollers: rollerblade, skateboard'
          # smoothness=good
          good: 'Thin Wheels: racing bike'
          # smoothness=horrible
          horrible: 'Off-Road: heavy duty off-road vehicle'
          # smoothness=impassable
          impassable: Impassable / No wheeled vehicle
          # smoothness=intermediate
          intermediate: 'Wheels: city bike, wheelchair, scooter'
          # smoothness=very_bad
          very_bad: 'High Clearance: light duty off-road vehicle'
          # smoothness=very_horrible
          very_horrible: 'Specialized off-road: tractor, ATV'
        # smoothness field placeholder
        placeholder: 'Thin Rollers, Wheels, Off-Road...'
      smoothness_wegoto:
        # 'smoothness=*'
        label: Smoothnesss
        options:
          # smoothness=bad
          bad: Bad
          # smoothness=excellent
          excellent: Excellent
          # smoothness=intermediate
          intermediate: Intermediate
        # smoothness_wegoto field placeholder
        placeholder: 'Excellent, intermediate, Bad...'
      social_facility_for:
        # 'social_facility:for=*'
        label: People served
        # social_facility_for field placeholder
        placeholder: 'Homeless, Disabled, Child, etc'
      source:
        # 'source=*'
        label: Source
      sport:
        # 'sport=*'
        label: Sport
      sport_ice:
        # 'sport=*'
        label: Sport
      sport_racing:
        # 'sport=*'
        label: Sport
      structure:
        # 'bridge=*, tunnel=*, embankment=*, cutting=*, ford=*'
        label: Structure
        options:
          # bridge=yes
          bridge: Bridge
          # cutting=yes
          cutting: Cutting
          # embankment=yes
          embankment: Embankment
          # ford=yes
          ford: Ford
          # tunnel=yes
          tunnel: Tunnel
        # structure field placeholder
        placeholder: Unknown
      studio:
        # 'studio=*'
        label: Type
      substation:
        # 'substation=*'
        label: Type
      supervised:
        # 'supervised=*'
        label: Supervised
      surface:
        # 'surface=*'
        label: Surface
      surface_wegoto:
        # 'surface=*'
        label: Surface
        options:
          # surface=asphalt
          asphalt: Asphalt
          # surface=compacted
          compacted: Compacted
          # surface=dalle
          dalle: Dalle
          # surface=dirt
          dirt: Dirt
          # surface=grass
          grass: Grass
          # surface=paving_stone
          paving_stone: Paving stone
          # surface=wood
          wood: Wood
      tactile_paving:
        # 'tactile_paving=*'
        label: Tactile Paving
        options:
          # 'tactile_paving=limited:1:l'
          'limited:1:l': Etat 1
          # 'tactile_paving=limited:1:m'
          'limited:1:m': ' Etat 1'
          # 'tactile_paving=limited:1:r'
          'limited:1:r': Etat 1
          # 'tactile_paving=limited:2:l'
          'limited:2:l': Etat 1
          # 'tactile_paving=limited:2:m'
          'limited:2:m': Etat 1
          # 'tactile_paving=limited:2:r'
          'limited:2:r': Etat 1
          # tactile_paving=no
          'no': Non présent
          # 'tactile_paving=yes:l'
          'yes:l': Etat 1
          # 'tactile_paving=yes:m'
          'yes:m': Etat 1
          # 'tactile_paving=yes:r'
          'yes:r': Etat 1
        # tactile_paving field placeholder
        placeholder: BEV
      takeaway:
        # 'takeaway=*'
        label: Takeaway
        options:
          # takeaway=no
          'no': 'No'
          # takeaway=only
          only: Takeaway Only
          # takeaway=yes
          'yes': 'Yes'
        # takeaway field placeholder
        placeholder: 'Yes, No, Takeaway Only...'
      toilets/disposal:
        # 'toilets:disposal=*'
        label: Disposal
        options:
          # 'toilets:disposal=bucket'
          bucket: Bucket
          # 'toilets:disposal=chemical'
          chemical: Chemical
          # 'toilets:disposal=flush'
          flush: Flush
          # 'toilets:disposal=pitlatrine'
          pitlatrine: Pit/Latrine
      tourism:
        # 'tourism=*'
        label: Type
      towertype:
        # 'tower:type=*'
        label: Tower type
      tracktype:
        # 'tracktype=*'
        label: Track Type
        options:
          # tracktype=grade1
          grade1: 'Solid: paved or heavily compacted hardcore surface'
          # tracktype=grade2
          grade2: 'Mostly Solid: gravel/rock with some soft material mixed in'
          # tracktype=grade3
          grade3: Even mixture of hard and soft materials
          # tracktype=grade4
          grade4: 'Mostly Soft: soil/sand/grass with some hard material mixed in'
          # tracktype=grade5
          grade5: 'Soft: soil/sand/grass'
        # tracktype field placeholder
        placeholder: 'Solid, Mostly Solid, Soft...'
      traffic_signals:
        # 'traffic_signals=*'
        label: Type
      traffic_signals_wegoto:
        # 'traffic_signals:presence=*'
        label: Traffic signal
      traffic_signals_wegoto2:
        # 'traffic_signals:sound=*'
        label: Sound Traffic signal
      trail_visibility:
        # 'trail_visibility=*'
        label: Trail Visibility
        options:
          # trail_visibility=bad
          bad: 'Bad: no markers, path sometimes invisible/pathless'
          # trail_visibility=excellent
          excellent: 'Excellent: unambiguous path or markers everywhere'
          # trail_visibility=good
          good: 'Good: markers visible, sometimes require searching'
          # trail_visibility=horrible
          horrible: 'Horrible: often pathless, some orientation skills required'
          # trail_visibility=intermediate
          intermediate: 'Intermediate: few markers, path mostly visible'
          # trail_visibility=no
          'no': 'No: pathless, excellent orientation skills required'
        # trail_visibility field placeholder
        placeholder: 'Excellent, Good, Bad...'
      trees:
        # 'trees=*'
        label: Trees
      tunnel:
        # 'tunnel=*'
        label: Tunnel
      vending:
        # 'vending=*'
        label: Type of Goods
      water:
        # 'water=*'
        label: Type
      water_point:
        # 'water_point=*'
        label: Water Point
      waterway:
        # 'waterway=*'
        label: Type
      website:
        # 'website=*'
        label: Website
        # website field placeholder
        placeholder: 'http://example.com/'
      wegoto:
        # 'wegoto=*'
        label: wegoto
      wetland:
        # 'wetland=*'
        label: Type
      wheelchair:
        # 'wheelchair=*'
        label: Wheelchair Access
      width:
        # 'est_width=*'
        label: Width (Meters)
        # width field placeholder
        placeholder: En cm
      wikipedia:
        # 'wikipedia=*, wikidata=*'
        label: Wikipedia
    presets:
      address:
        # 'addr:housenumber=*'
        name: Address
        terms: "<translate with synonyms or related terms for 'Address', separated by commas>"
      aerialway:
        # 'aerialway=*'
        name: Aerialway
        # 'terms: ski lift,funifor,funitel'
        terms: "<translate with synonyms or related terms for 'Aerialway', separated by commas>"
      aeroway:
        # 'aeroway=*'
        name: Aeroway
        terms: "<translate with synonyms or related terms for 'Aeroway', separated by commas>"
      amenity:
        # 'amenity=*'
        name: Amenity
        terms: "<translate with synonyms or related terms for 'Amenity', separated by commas>"
      amenity/arts_centre:
        # amenity=arts_centre
        name: Arts Center
        terms: "<translate with synonyms or related terms for 'Arts Center', separated by commas>"
      amenity/atm:
        # amenity=atm
        name: ATM
        # 'terms: money,cash,machine'
        terms: "<translate with synonyms or related terms for 'ATM', separated by commas>"
      amenity/bank:
        # amenity=bank
        name: Bank
        # 'terms: credit union,check,deposit,fund,investment,repository,reserve,safe,savings,stock,treasury,trust,vault'
        terms: "<translate with synonyms or related terms for 'Bank', separated by commas>"
      amenity/bar:
        # amenity=bar
        name: Bar
        # 'terms: dive,beer,bier,booze'
        terms: "<translate with synonyms or related terms for 'Bar', separated by commas>"
      amenity/bbq:
        # amenity=bbq
        name: Barbecue/Grill
        # 'terms: bbq,grill'
        terms: "<translate with synonyms or related terms for 'Barbecue/Grill', separated by commas>"
      amenity/bench:
        # amenity=bench
        name: Bench
        # 'terms: seat'
        terms: "<translate with synonyms or related terms for 'Bench', separated by commas>"
      amenity/bicycle_parking:
        # amenity=bicycle_parking
        name: Bicycle Parking
        # 'terms: bike'
        terms: "<translate with synonyms or related terms for 'Bicycle Parking', separated by commas>"
      amenity/bicycle_rental:
        # amenity=bicycle_rental
        name: Bicycle Rental
        # 'terms: bike'
        terms: "<translate with synonyms or related terms for 'Bicycle Rental', separated by commas>"
      amenity/bicycle_repair_station:
        # amenity=bicycle_repair_station
        name: Bicycle Repair Tool Stand
        # 'terms: bike,repair,chain,pump'
        terms: "<translate with synonyms or related terms for 'Bicycle Repair Tool Stand', separated by commas>"
      amenity/biergarten:
        # amenity=biergarten
        name: Beer Garden
        # 'terms: beer,bier,booze'
        terms: "<translate with synonyms or related terms for 'Beer Garden', separated by commas>"
      amenity/boat_rental:
        # amenity=boat_rental
        name: Boat Rental
        terms: "<translate with synonyms or related terms for 'Boat Rental', separated by commas>"
      amenity/bureau_de_change:
        # amenity=bureau_de_change
        name: Currency Exchange
        # 'terms: bureau de change,money changer'
        terms: "<translate with synonyms or related terms for 'Currency Exchange', separated by commas>"
      amenity/bus_station:
        # amenity=bus_station
        name: Bus Station
        terms: "<translate with synonyms or related terms for 'Bus Station', separated by commas>"
      amenity/cafe:
        # amenity=cafe
        name: Cafe
        # 'terms: bistro,coffee,tea'
        terms: "<translate with synonyms or related terms for 'Cafe', separated by commas>"
      amenity/car_rental:
        # amenity=car_rental
        name: Car Rental
        terms: "<translate with synonyms or related terms for 'Car Rental', separated by commas>"
      amenity/car_sharing:
        # amenity=car_sharing
        name: Car Sharing
        terms: "<translate with synonyms or related terms for 'Car Sharing', separated by commas>"
      amenity/car_wash:
        # amenity=car_wash
        name: Car Wash
        terms: "<translate with synonyms or related terms for 'Car Wash', separated by commas>"
      amenity/casino:
        # amenity=casino
        name: Casino
        # 'terms: gambling,roulette,craps,poker,blackjack'
        terms: "<translate with synonyms or related terms for 'Casino', separated by commas>"
      amenity/charging_station:
        # amenity=charging_station
        name: Charging Station
        # 'terms: EV,Electric Vehicle,Supercharger'
        terms: "<translate with synonyms or related terms for 'Charging Station', separated by commas>"
      amenity/childcare:
        # amenity=childcare
        name: Nursery/Childcare
        # 'terms: daycare,orphanage,playgroup'
        terms: "<translate with synonyms or related terms for 'Nursery/Childcare', separated by commas>"
      amenity/cinema:
        # amenity=cinema
        name: Cinema
        # 'terms: drive-in,film,flick,movie,theater,picture,show,screen'
        terms: "<translate with synonyms or related terms for 'Cinema', separated by commas>"
      amenity/clinic:
        # amenity=clinic
        name: Clinic
        # 'terms: medical,urgentcare'
        terms: "<translate with synonyms or related terms for 'Clinic', separated by commas>"
      amenity/clock:
        # amenity=clock
        name: Clock
        terms: "<translate with synonyms or related terms for 'Clock', separated by commas>"
      amenity/college:
        # amenity=college
        name: College Grounds
        # 'terms: university'
        terms: "<translate with synonyms or related terms for 'College Grounds', separated by commas>"
      amenity/community_centre:
        # amenity=community_centre
        name: Community Center
        # 'terms: event,hall'
        terms: "<translate with synonyms or related terms for 'Community Center', separated by commas>"
      amenity/compressed_air:
        # amenity=compressed_air
        name: Compressed Air
        terms: "<translate with synonyms or related terms for 'Compressed Air', separated by commas>"
      amenity/courthouse:
        # amenity=courthouse
        name: Courthouse
        terms: "<translate with synonyms or related terms for 'Courthouse', separated by commas>"
      amenity/dentist:
        # amenity=dentist
        name: Dentist
        # 'terms: tooth,teeth'
        terms: "<translate with synonyms or related terms for 'Dentist', separated by commas>"
      amenity/doctors:
        # amenity=doctors
        name: Doctor
        # 'terms: medic*'
        terms: "<translate with synonyms or related terms for 'Doctor', separated by commas>"
      amenity/dojo:
        # amenity=dojo
        name: Dojo / Martial Arts Academy
        # 'terms: martial arts,dojang'
        terms: "<translate with synonyms or related terms for 'Dojo / Martial Arts Academy', separated by commas>"
      amenity/drinking_water:
        # amenity=drinking_water
        name: Drinking Water
        # 'terms: fountain,potable'
        terms: "<translate with synonyms or related terms for 'Drinking Water', separated by commas>"
      amenity/embassy:
        # amenity=embassy
        name: Embassy
        terms: "<translate with synonyms or related terms for 'Embassy', separated by commas>"
      amenity/fast_food:
        # amenity=fast_food
        name: Fast Food
        # 'terms: restaurant'
        terms: "<translate with synonyms or related terms for 'Fast Food', separated by commas>"
      amenity/ferry_terminal:
        # amenity=ferry_terminal
        name: Ferry Terminal
        terms: "<translate with synonyms or related terms for 'Ferry Terminal', separated by commas>"
      amenity/fire_station:
        # amenity=fire_station
        name: Fire Station
        terms: "<translate with synonyms or related terms for 'Fire Station', separated by commas>"
      amenity/fountain:
        # amenity=fountain
        name: Fountain
        terms: "<translate with synonyms or related terms for 'Fountain', separated by commas>"
      amenity/fuel:
        # amenity=fuel
        name: Gas Station
        # 'terms: petrol,fuel,gasoline,propane,diesel,lng,cng,biodiesel'
        terms: "<translate with synonyms or related terms for 'Gas Station', separated by commas>"
      amenity/grave_yard:
        # amenity=grave_yard
        name: Graveyard
        terms: "<translate with synonyms or related terms for 'Graveyard', separated by commas>"
      amenity/grit_bin:
        # amenity=grit_bin
        name: Grit Bin
        # 'terms: salt,sand'
        terms: "<translate with synonyms or related terms for 'Grit Bin', separated by commas>"
      amenity/hospital:
        # amenity=hospital
        name: Hospital Grounds
        # 'terms: clinic,doctor,emergency room,health service,hospice,infirmary,institution,nursing home,sanatorium,sanitarium,sick,surgery,ward'
        terms: "<translate with synonyms or related terms for 'Hospital Grounds', separated by commas>"
      amenity/hunting_stand:
        # amenity=hunting_stand
        name: Hunting Stand
        terms: "<translate with synonyms or related terms for 'Hunting Stand', separated by commas>"
      amenity/kindergarten:
        # amenity=kindergarten
        name: Preschool/Kindergarten Grounds
        # 'terms: kindergarden,pre-school'
        terms: "<translate with synonyms or related terms for 'Preschool/Kindergarten Grounds', separated by commas>"
      amenity/library:
        # amenity=library
        name: Library
        # 'terms: book'
        terms: "<translate with synonyms or related terms for 'Library', separated by commas>"
      amenity/marketplace:
        # amenity=marketplace
        name: Marketplace
        terms: "<translate with synonyms or related terms for 'Marketplace', separated by commas>"
      amenity/motorcycle_parking:
        # amenity=motorcycle_parking
        name: Motorcycle Parking
        terms: "<translate with synonyms or related terms for 'Motorcycle Parking', separated by commas>"
      amenity/nightclub:
        # amenity=nightclub
        name: Nightclub
        # 'terms: disco*,night club,dancing,dance club'
        terms: "<translate with synonyms or related terms for 'Nightclub', separated by commas>"
      amenity/parking:
        # amenity=parking
        name: Car Parking
        terms: "<translate with synonyms or related terms for 'Car Parking', separated by commas>"
      amenity/parking_entrance:
        # amenity=parking_entrance
        name: Parking Garage Entrance/Exit
        terms: "<translate with synonyms or related terms for 'Parking Garage Entrance/Exit', separated by commas>"
      amenity/parking_space:
        # amenity=parking_space
        name: Parking Space
        terms: "<translate with synonyms or related terms for 'Parking Space', separated by commas>"
      amenity/pharmacy:
        # amenity=pharmacy
        name: Pharmacy
        # 'terms: drug,medicine'
        terms: "<translate with synonyms or related terms for 'Pharmacy', separated by commas>"
      amenity/place_of_worship:
        # amenity=place_of_worship
        name: Place of Worship
        # 'terms: abbey,basilica,bethel,cathedral,chancel,chantry,chapel,church,fold,house of God,house of prayer,house of worship,minster,mission,mosque,oratory,parish,sacellum,sanctuary,shrine,synagogue,tabernacle,temple'
        terms: "<translate with synonyms or related terms for 'Place of Worship', separated by commas>"
      amenity/police:
        # amenity=police
        name: Police
        # 'terms: badge,constable,constabulary,cop,detective,fed,law,enforcement,officer,patrol'
        terms: "<translate with synonyms or related terms for 'Police', separated by commas>"
      amenity/post_box:
        # amenity=post_box
        name: Mailbox
        # 'terms: letter,post'
        terms: "<translate with synonyms or related terms for 'Mailbox', separated by commas>"
      amenity/post_office:
        # amenity=post_office
        name: Post Office
        # 'terms: letter,mail'
        terms: "<translate with synonyms or related terms for 'Post Office', separated by commas>"
      amenity/prison:
        # amenity=prison
        name: Prison Grounds
        # 'terms: cell,jail'
        terms: "<translate with synonyms or related terms for 'Prison Grounds', separated by commas>"
      amenity/pub:
        # amenity=pub
        name: Pub
        # 'terms: dive,beer,bier,booze'
        terms: "<translate with synonyms or related terms for 'Pub', separated by commas>"
      amenity/public_bookcase:
        # amenity=public_bookcase
        name: Public Bookcase
        # 'terms: library,bookcrossing'
        terms: "<translate with synonyms or related terms for 'Public Bookcase', separated by commas>"
      amenity/ranger_station:
        # amenity=ranger_station
        name: Ranger Station
        # 'terms: visitor center,visitor centre,permit center,permit centre,backcountry office,warden office,warden center'
        terms: "<translate with synonyms or related terms for 'Ranger Station', separated by commas>"
      amenity/recycling:
        # amenity=recycling
        name: Recycling
        # 'terms: can,bottle,garbage,scrap,trash'
        terms: "<translate with synonyms or related terms for 'Recycling', separated by commas>"
      amenity/register_office:
        # amenity=register_office
        name: Register Office
        terms: "<translate with synonyms or related terms for 'Register Office', separated by commas>"
      amenity/restaurant:
        # amenity=restaurant
        name: Restaurant
        # 'terms: bar,breakfast,cafe,café,canteen,coffee,dine,dining,dinner,drive-in,eat,grill,lunch,table'
        terms: "<translate with synonyms or related terms for 'Restaurant', separated by commas>"
      amenity/sanitary_dump_station:
        # amenity=sanitary_dump_station
        name: RV Toilet Disposal
        # 'terms: Motor Home,Camper,Sanitary,Dump Station,Elsan,CDP,CTDP,Chemical Toilet'
        terms: "<translate with synonyms or related terms for 'RV Toilet Disposal', separated by commas>"
      amenity/school:
        # amenity=school
        name: School Grounds
        # 'terms: academy,elementary school,middle school,high school'
        terms: "<translate with synonyms or related terms for 'School Grounds', separated by commas>"
      amenity/shelter:
        # amenity=shelter
        name: Shelter
        # 'terms: lean-to,gazebo,picnic'
        terms: "<translate with synonyms or related terms for 'Shelter', separated by commas>"
      amenity/social_facility:
        # amenity=social_facility
        name: Social Facility
        terms: "<translate with synonyms or related terms for 'Social Facility', separated by commas>"
      amenity/social_facility/food_bank:
        # 'amenity=social_facility, social_facility=food_bank'
        name: Food Bank
        terms: "<translate with synonyms or related terms for 'Food Bank', separated by commas>"
      amenity/social_facility/group_home:
        # 'amenity=social_facility, social_facility=group_home, social_facility:for=senior'
        name: Elderly Group Home
        # 'terms: old,senior,living'
        terms: "<translate with synonyms or related terms for 'Elderly Group Home', separated by commas>"
      amenity/social_facility/homeless_shelter:
        # 'amenity=social_facility, social_facility=shelter, social_facility:for=homeless'
        name: Homeless Shelter
        # 'terms: houseless,unhoused,displaced'
        terms: "<translate with synonyms or related terms for 'Homeless Shelter', separated by commas>"
      amenity/studio:
        # amenity=studio
        name: Studio
        # 'terms: recording,radio,television'
        terms: "<translate with synonyms or related terms for 'Studio', separated by commas>"
      amenity/swimming_pool:
        # amenity=swimming_pool
        name: Swimming Pool
        terms: "<translate with synonyms or related terms for 'Swimming Pool', separated by commas>"
      amenity/taxi:
        # amenity=taxi
        name: Taxi Stand
        # 'terms: cab'
        terms: "<translate with synonyms or related terms for 'Taxi Stand', separated by commas>"
      amenity/telephone:
        # amenity=telephone
        name: Telephone
        # 'terms: phone'
        terms: "<translate with synonyms or related terms for 'Telephone', separated by commas>"
      amenity/theatre:
        # amenity=theatre
        name: Theater
        # 'terms: theatre,performance,play,musical'
        terms: "<translate with synonyms or related terms for 'Theater', separated by commas>"
      amenity/toilets:
        # amenity=toilets
        name: Toilets
        # 'terms: bathroom,restroom,outhouse,privy,head,lavatory,latrine,water closet,WC,W.C.'
        terms: "<translate with synonyms or related terms for 'Toilets', separated by commas>"
      amenity/townhall:
        # amenity=townhall
        name: Town Hall
        # 'terms: village,city,government,courthouse,municipal'
        terms: "<translate with synonyms or related terms for 'Town Hall', separated by commas>"
      amenity/university:
        # amenity=university
        name: University Grounds
        # 'terms: college'
        terms: "<translate with synonyms or related terms for 'University Grounds', separated by commas>"
      amenity/vending_machine/cigarettes:
        # 'amenity=vending_machine, vending=cigarettes'
        name: Cigarette Vending Machine
        # 'terms: cigarette'
        terms: "<translate with synonyms or related terms for 'Cigarette Vending Machine', separated by commas>"
      amenity/vending_machine/condoms:
        # 'amenity=vending_machine, vending=condoms'
        name: Condom Vending Machine
        # 'terms: condom'
        terms: "<translate with synonyms or related terms for 'Condom Vending Machine', separated by commas>"
      amenity/vending_machine/drinks:
        # 'amenity=vending_machine, vending=drinks'
        name: Drink Vending Machine
        # 'terms: drink,soda,beverage,juice,pop'
        terms: "<translate with synonyms or related terms for 'Drink Vending Machine', separated by commas>"
      amenity/vending_machine/excrement_bags:
        # 'amenity=vending_machine, vending=excrement_bags'
        name: Excrement Bag Vending Machine
        # 'terms: excrement bags,poop,dog,animal'
        terms: "<translate with synonyms or related terms for 'Excrement Bag Vending Machine', separated by commas>"
      amenity/vending_machine/news_papers:
        # 'amenity=vending_machine, vending=news_papers'
        name: Newspaper Vending Machine
        # 'terms: newspaper'
        terms: "<translate with synonyms or related terms for 'Newspaper Vending Machine', separated by commas>"
      amenity/vending_machine/parcel_pickup_dropoff:
        # 'amenity=vending_machine, vending=parcel_pickup;parcel_mail_in'
        name: Parcel Pickup/Dropoff Vending Machine
        # 'terms: parcel,mail,pickup'
        terms: "<translate with synonyms or related terms for 'Parcel Pickup/Dropoff Vending Machine', separated by commas>"
      amenity/vending_machine/parking_tickets:
        # 'amenity=vending_machine, vending=parking_tickets'
        name: Parking Ticket Vending Machine
        # 'terms: parking,ticket'
        terms: "<translate with synonyms or related terms for 'Parking Ticket Vending Machine', separated by commas>"
      amenity/vending_machine/public_transport_tickets:
        # 'amenity=vending_machine, vending=public_transport_tickets'
        name: Transit Ticket Vending Machine
        # 'terms: bus,train,ferry,rail,ticket,transportation'
        terms: "<translate with synonyms or related terms for 'Transit Ticket Vending Machine', separated by commas>"
      amenity/vending_machine/sweets:
        # 'amenity=vending_machine, vending=sweets'
        name: Snack Vending Machine
        # 'terms: candy,gum,chip,pretzel,cookie,cracker'
        terms: "<translate with synonyms or related terms for 'Snack Vending Machine', separated by commas>"
      amenity/vending_machine/vending_machine:
        # amenity=vending_machine
        name: Vending Machine
        terms: "<translate with synonyms or related terms for 'Vending Machine', separated by commas>"
      amenity/veterinary:
        # amenity=veterinary
        name: Veterinary
        # 'terms: pet clinic,veterinarian,animal hospital,pet doctor'
        terms: "<translate with synonyms or related terms for 'Veterinary', separated by commas>"
      amenity/waste_basket:
        # amenity=waste_basket
        name: Waste Basket
        # 'terms: bin,rubbish,litter,trash,garbage'
        terms: "<translate with synonyms or related terms for 'Waste Basket', separated by commas>"
      amenity/waste_disposal:
        # amenity=waste_disposal
        name: Garbage Dumpster
        # 'terms: rubbish,litter,trash'
        terms: "<translate with synonyms or related terms for 'Garbage Dumpster', separated by commas>"
      amenity/water_point:
        # amenity=water_point
        name: RV Drinking Water
        terms: "<translate with synonyms or related terms for 'RV Drinking Water', separated by commas>"
      barrier:
        # 'barrier=*'
        name: Barrier
        terms: "<translate with synonyms or related terms for 'Barrier', separated by commas>"
      barrier/block:
        # barrier=block
        name: Block
        terms: "<translate with synonyms or related terms for 'Block', separated by commas>"
      barrier/bollard:
        # barrier=bollard
        name: Bollard
        terms: "<translate with synonyms or related terms for 'Bollard', separated by commas>"
      barrier/cattle_grid:
        # barrier=cattle_grid
        name: Cattle Grid
        terms: "<translate with synonyms or related terms for 'Cattle Grid', separated by commas>"
      barrier/city_wall:
        # barrier=city_wall
        name: City Wall
        terms: "<translate with synonyms or related terms for 'City Wall', separated by commas>"
      barrier/cycle_barrier:
        # barrier=cycle_barrier
        name: Cycle Barrier
        terms: "<translate with synonyms or related terms for 'Cycle Barrier', separated by commas>"
      barrier/ditch:
        # barrier=ditch
        name: Trench
        terms: "<translate with synonyms or related terms for 'Trench', separated by commas>"
      barrier/entrance:
        # barrier=entrance
        name: Entrance
        terms: "<translate with synonyms or related terms for 'Entrance', separated by commas>"
      barrier/fence:
        # barrier=fence
        name: Fence
        terms: "<translate with synonyms or related terms for 'Fence', separated by commas>"
      barrier/gate:
        # barrier=gate
        name: Gate
        terms: "<translate with synonyms or related terms for 'Gate', separated by commas>"
      barrier/hedge:
        # barrier=hedge
        name: Hedge
        terms: "<translate with synonyms or related terms for 'Hedge', separated by commas>"
      barrier/kissing_gate:
        # barrier=kissing_gate
        name: Kissing Gate
        terms: "<translate with synonyms or related terms for 'Kissing Gate', separated by commas>"
      barrier/lift_gate:
        # barrier=lift_gate
        name: Lift Gate
        terms: "<translate with synonyms or related terms for 'Lift Gate', separated by commas>"
      barrier/retaining_wall:
        # barrier=retaining_wall
        name: Retaining Wall
        terms: "<translate with synonyms or related terms for 'Retaining Wall', separated by commas>"
      barrier/stile:
        # barrier=stile
        name: Stile
        terms: "<translate with synonyms or related terms for 'Stile', separated by commas>"
      barrier/toll_booth:
        # barrier=toll_booth
        name: Toll Booth
        terms: "<translate with synonyms or related terms for 'Toll Booth', separated by commas>"
      barrier/wall:
        # barrier=wall
        name: Wall
        terms: "<translate with synonyms or related terms for 'Wall', separated by commas>"
      building:
        # 'building=*'
        name: Building
        terms: "<translate with synonyms or related terms for 'Building', separated by commas>"
      building/apartments:
        # building=apartments
        name: Apartments
        terms: "<translate with synonyms or related terms for 'Apartments', separated by commas>"
      building/barn:
        # building=barn
        name: Barn
        terms: "<translate with synonyms or related terms for 'Barn', separated by commas>"
      building/bunker:
        # building=bunker
        name: Bunker
        terms: "<translate with synonyms or related terms for 'Bunker', separated by commas>"
      building/cabin:
        # building=cabin
        name: Cabin
        terms: "<translate with synonyms or related terms for 'Cabin', separated by commas>"
      building/cathedral:
        # building=cathedral
        name: Cathedral Building
        terms: "<translate with synonyms or related terms for 'Cathedral Building', separated by commas>"
      building/chapel:
        # building=chapel
        name: Chapel Building
        terms: "<translate with synonyms or related terms for 'Chapel Building', separated by commas>"
      building/church:
        # building=church
        name: Church Building
        terms: "<translate with synonyms or related terms for 'Church Building', separated by commas>"
      building/college:
        # building=college
        name: College Building
        # 'terms: university'
        terms: "<translate with synonyms or related terms for 'College Building', separated by commas>"
      building/commercial:
        # building=commercial
        name: Commercial Building
        terms: "<translate with synonyms or related terms for 'Commercial Building', separated by commas>"
      building/construction:
        # building=construction
        name: Building Under Construction
        terms: "<translate with synonyms or related terms for 'Building Under Construction', separated by commas>"
      building/detached:
        # building=detached
        name: Detached House
        # 'terms: home,single,family,residence,dwelling'
        terms: "<translate with synonyms or related terms for 'Detached House', separated by commas>"
      building/dormitory:
        # building=dormitory
        name: Dormitory
        terms: "<translate with synonyms or related terms for 'Dormitory', separated by commas>"
      building/entrance:
        # building=entrance
        name: Entrance/Exit
        terms: "<translate with synonyms or related terms for 'Entrance/Exit', separated by commas>"
      building/garage:
        # building=garage
        name: Garage
        terms: "<translate with synonyms or related terms for 'Garage', separated by commas>"
      building/garages:
        # building=garages
        name: Garages
        terms: "<translate with synonyms or related terms for 'Garages', separated by commas>"
      building/greenhouse:
        # building=greenhouse
        name: Greenhouse
        terms: "<translate with synonyms or related terms for 'Greenhouse', separated by commas>"
      building/hospital:
        # building=hospital
        name: Hospital Building
        terms: "<translate with synonyms or related terms for 'Hospital Building', separated by commas>"
      building/hotel:
        # building=hotel
        name: Hotel Building
        terms: "<translate with synonyms or related terms for 'Hotel Building', separated by commas>"
      building/house:
        # building=house
        name: House
        # 'terms: home,family,residence,dwelling'
        terms: "<translate with synonyms or related terms for 'House', separated by commas>"
      building/hut:
        # building=hut
        name: Hut
        terms: "<translate with synonyms or related terms for 'Hut', separated by commas>"
      building/industrial:
        # building=industrial
        name: Industrial Building
        terms: "<translate with synonyms or related terms for 'Industrial Building', separated by commas>"
      building/kindergarten:
        # building=kindergarten
        name: Preschool/Kindergarten Building
        # 'terms: kindergarden,pre-school'
        terms: "<translate with synonyms or related terms for 'Preschool/Kindergarten Building', separated by commas>"
      building/public:
        # building=public
        name: Public Building
        terms: "<translate with synonyms or related terms for 'Public Building', separated by commas>"
      building/residential:
        # building=residential
        name: Residential Building
        terms: "<translate with synonyms or related terms for 'Residential Building', separated by commas>"
      building/retail:
        # building=retail
        name: Retail Building
        terms: "<translate with synonyms or related terms for 'Retail Building', separated by commas>"
      building/roof:
        # building=roof
        name: Roof
        terms: "<translate with synonyms or related terms for 'Roof', separated by commas>"
      building/school:
        # building=school
        name: School Building
        # 'terms: academy,elementary school,middle school,high school'
        terms: "<translate with synonyms or related terms for 'School Building', separated by commas>"
      building/semidetached_house:
        # building=semidetached_house
        name: Semi-Detached House
        # 'terms: home,double,duplex,twin,family,residence,dwelling'
        terms: "<translate with synonyms or related terms for 'Semi-Detached House', separated by commas>"
      building/shed:
        # building=shed
        name: Shed
        terms: "<translate with synonyms or related terms for 'Shed', separated by commas>"
      building/stable:
        # building=stable
        name: Stable
        terms: "<translate with synonyms or related terms for 'Stable', separated by commas>"
      building/static_caravan:
        # building=static_caravan
        name: Static Mobile Home
        terms: "<translate with synonyms or related terms for 'Static Mobile Home', separated by commas>"
      building/terrace:
        # building=terrace
        name: Row Houses
        # 'terms: home,terrace,brownstone,family,residence,dwelling'
        terms: "<translate with synonyms or related terms for 'Row Houses', separated by commas>"
      building/test:
        # building=test
        name: Test
        terms: "<translate with synonyms or related terms for 'Test', separated by commas>"
      building/train_station:
        # building=train_station
        name: Train Station
        terms: "<translate with synonyms or related terms for 'Train Station', separated by commas>"
      building/university:
        # building=university
        name: University Building
        # 'terms: college'
        terms: "<translate with synonyms or related terms for 'University Building', separated by commas>"
      building/warehouse:
        # building=warehouse
        name: Warehouse
        terms: "<translate with synonyms or related terms for 'Warehouse', separated by commas>"
      embankment:
        # embankment=yes
        name: Embankment
        terms: "<translate with synonyms or related terms for 'Embankment', separated by commas>"
      entrance:
        # 'entrance=*'
        name: Entrance/Exit
        terms: "<translate with synonyms or related terms for 'Entrance/Exit', separated by commas>"
      footway/crossing:
        # 'highway=footway, footway=crossing'
        name: Street Crossing
        terms: "<translate with synonyms or related terms for 'Street Crossing', separated by commas>"
      footway/crosswalk:
        # 'highway=footway, footway=crossing, crossing=zebra'
        name: Pedestrian Crosswalk
        # 'terms: zebra crossing'
        terms: "<translate with synonyms or related terms for 'Pedestrian Crosswalk', separated by commas>"
      highway:
        # 'highway=*'
        name: Highway
        terms: "<translate with synonyms or related terms for 'Highway', separated by commas>"
      highway/autre_wegoto:
        # footway=other
        name: Other Road
        terms: "<translate with synonyms or related terms for 'Other Road', separated by commas>"
      highway/bus_stop:
        # highway=bus_stop
        name: Bus Stop
        terms: "<translate with synonyms or related terms for 'Bus Stop', separated by commas>"
      highway/chausse_wegoto:
        # highway=road
        name: Road
        terms: "<translate with synonyms or related terms for 'Road', separated by commas>"
      highway/chemin_wegoto:
        # highway=path
        name: Path
        terms: "<translate with synonyms or related terms for 'Path', separated by commas>"
      highway/corridor:
        # highway=corridor
        name: Indoor Corridor
        # 'terms: gallery,hall,hallway,indoor,passage,passageway'
        terms: "<translate with synonyms or related terms for 'Indoor Corridor', separated by commas>"
      highway/crossing:
        # highway=crossing
        name: Street Crossing
        terms: "<translate with synonyms or related terms for 'Street Crossing', separated by commas>"
      highway/crosswalk:
        # 'highway=crossing, crossing=zebra'
        name: Pedestrian Crosswalk
        # 'terms: zebra crossing'
        terms: "<translate with synonyms or related terms for 'Pedestrian Crosswalk', separated by commas>"
      highway/cyclable_wegoto:
        # highway=cycleway
        name: Cycle Path
        # 'terms: bike'
        terms: "<translate with synonyms or related terms for 'Cycle Path', separated by commas>"
      highway/ilot_sortie:
        # 'island:node=yes'
        name: island
        terms: "<translate with synonyms or related terms for 'island', separated by commas>"
      highway/ilot_wegoto:
        # footway=island
        name: Island
        terms: "<translate with synonyms or related terms for 'Island', separated by commas>"
      highway/living_street:
        # highway=living_street
        name: Living Street
        terms: "<translate with synonyms or related terms for 'Living Street', separated by commas>"
      highway/mini_roundabout:
        # highway=mini_roundabout
        name: Mini-Roundabout
        terms: "<translate with synonyms or related terms for 'Mini-Roundabout', separated by commas>"
      highway/motorway:
        # highway=motorway
        name: Motorway
        terms: "<translate with synonyms or related terms for 'Motorway', separated by commas>"
      highway/motorway_junction:
        # highway=motorway_junction
        name: Motorway Junction / Exit
        terms: "<translate with synonyms or related terms for 'Motorway Junction / Exit', separated by commas>"
      highway/motorway_link:
        # highway=motorway_link
        name: Motorway Link
        # 'terms: ramp,on ramp,off ramp'
        terms: "<translate with synonyms or related terms for 'Motorway Link', separated by commas>"
      highway/pietonne_wegoto:
        # highway=pedestrian
        name: Pedestrian Street
        terms: "<translate with synonyms or related terms for 'Pedestrian Street', separated by commas>"
      highway/primary:
        # highway=primary
        name: Primary Road
        terms: "<translate with synonyms or related terms for 'Primary Road', separated by commas>"
      highway/primary_link:
        # highway=primary_link
        name: Primary Link
        # 'terms: ramp,on ramp,off ramp'
        terms: "<translate with synonyms or related terms for 'Primary Link', separated by commas>"
      highway/raceway:
        # highway=raceway
        name: Motor Raceway
        # 'terms: auto*,race*,nascar'
        terms: "<translate with synonyms or related terms for 'Motor Raceway', separated by commas>"
      highway/residential:
        # highway=residential
        name: Residential Road
        terms: "<translate with synonyms or related terms for 'Residential Road', separated by commas>"
      highway/rest_area:
        # highway=rest_area
        name: Rest Area
        # 'terms: rest stop'
        terms: "<translate with synonyms or related terms for 'Rest Area', separated by commas>"
      highway/road:
        # highway=road
        name: Unknown Road
        terms: "<translate with synonyms or related terms for 'Unknown Road', separated by commas>"
      highway/secondary:
        # highway=secondary
        name: Secondary Road
        terms: "<translate with synonyms or related terms for 'Secondary Road', separated by commas>"
      highway/secondary_link:
        # highway=secondary_link
        name: Secondary Link
        # 'terms: ramp,on ramp,off ramp'
        terms: "<translate with synonyms or related terms for 'Secondary Link', separated by commas>"
      highway/service:
        # highway=service
        name: Service Road
        terms: "<translate with synonyms or related terms for 'Service Road', separated by commas>"
      highway/service/alley:
        # 'highway=service, service=alley'
        name: Alley
        terms: "<translate with synonyms or related terms for 'Alley', separated by commas>"
      highway/service/drive-through:
        # 'highway=service, service=drive-through'
        name: Drive-Through
        terms: "<translate with synonyms or related terms for 'Drive-Through', separated by commas>"
      highway/service/driveway:
        # 'highway=service, service=driveway'
        name: Driveway
        terms: "<translate with synonyms or related terms for 'Driveway', separated by commas>"
      highway/service/emergency_access:
        # 'highway=service, service=emergency_access'
        name: Emergency Access
        terms: "<translate with synonyms or related terms for 'Emergency Access', separated by commas>"
      highway/service/parking_aisle:
        # 'highway=service, service=parking_aisle'
        name: Parking Aisle
        terms: "<translate with synonyms or related terms for 'Parking Aisle', separated by commas>"
      highway/services:
        # highway=services
        name: Service Area
        # 'terms: services,travel plaza,service station'
        terms: "<translate with synonyms or related terms for 'Service Area', separated by commas>"
      highway/steps:
        # highway=steps
        name: Steps
        # 'terms: stairs,staircase'
        terms: "<translate with synonyms or related terms for 'Steps', separated by commas>"
      highway/stop:
        # highway=stop
        name: Stop Sign
        # 'terms: stop sign'
        terms: "<translate with synonyms or related terms for 'Stop Sign', separated by commas>"
      highway/street_lamp:
        # highway=street_lamp
        name: Street Lamp
        # 'terms: streetlight,street light,lamp,light,gaslight'
        terms: "<translate with synonyms or related terms for 'Street Lamp', separated by commas>"
      highway/tertiary:
        # highway=tertiary
        name: Tertiary Road
        terms: "<translate with synonyms or related terms for 'Tertiary Road', separated by commas>"
      highway/tertiary_link:
        # highway=tertiary_link
        name: Tertiary Link
        # 'terms: ramp,on ramp,off ramp'
        terms: "<translate with synonyms or related terms for 'Tertiary Link', separated by commas>"
      highway/track:
        # highway=track
        name: Unmaintained Track Road
        # 'terms: woods road,forest road,logging road,fire road,farm road,agricultural road,ranch road,carriage road,primitive,unmaintained,rut,offroad,4wd,4x4,four wheel drive,atv,quad,jeep,double track,two track'
        terms: "<translate with synonyms or related terms for 'Unmaintained Track Road', separated by commas>"
      highway/traffic_signals:
        # highway=traffic_signals
        name: Traffic Signals
        # 'terms: light,stoplight,traffic light'
        terms: "<translate with synonyms or related terms for 'Traffic Signals', separated by commas>"
      highway/traversee_sortie:
        # 'crossing:node=yes'
        name: Crossing
        terms: "<translate with synonyms or related terms for 'Crossing', separated by commas>"
      highway/traversee_wegoto:
        # footway=crossing
        name: Street Crossing
        terms: "<translate with synonyms or related terms for 'Street Crossing', separated by commas>"
      highway/trottoir_wegoto:
        # 'highway=footway, footway=sidewalk'
        name: SideWalk
        terms: "<translate with synonyms or related terms for 'SideWalk', separated by commas>"
      highway/trunk:
        # highway=trunk
        name: Trunk Road
        terms: "<translate with synonyms or related terms for 'Trunk Road', separated by commas>"
      highway/trunk_link:
        # highway=trunk_link
        name: Trunk Link
        # 'terms: ramp,on ramp,off ramp'
        terms: "<translate with synonyms or related terms for 'Trunk Link', separated by commas>"
      highway/turning_circle:
        # highway=turning_circle
        name: Turning Circle
        # 'terms: cul-de-sac'
        terms: "<translate with synonyms or related terms for 'Turning Circle', separated by commas>"
      highway/unclassified:
        # highway=unclassified
        name: Minor/Unclassified Road
        terms: "<translate with synonyms or related terms for 'Minor/Unclassified Road', separated by commas>"
      historic:
        # 'historic=*'
        name: Historic Site
        terms: "<translate with synonyms or related terms for 'Historic Site', separated by commas>"
      junction:
        # junction=yes
        name: Junction
        terms: "<translate with synonyms or related terms for 'Junction', separated by commas>"
      landuse:
        # 'landuse=*'
        name: Land Use
        terms: "<translate with synonyms or related terms for 'Land Use', separated by commas>"
      leisure:
        # 'leisure=*'
        name: Leisure
        terms: "<translate with synonyms or related terms for 'Leisure', separated by commas>"
      leisure/adult_gaming_centre:
        # leisure=adult_gaming_centre
        name: Adult Gaming Center
        # 'terms: gambling,slot machine'
        terms: "<translate with synonyms or related terms for 'Adult Gaming Center', separated by commas>"
      leisure/bird_hide:
        # leisure=bird_hide
        name: Bird Hide
        # 'terms: machan,ornithology'
        terms: "<translate with synonyms or related terms for 'Bird Hide', separated by commas>"
      leisure/bowling_alley:
        # leisure=bowling_alley
        name: Bowling Alley
        terms: "<translate with synonyms or related terms for 'Bowling Alley', separated by commas>"
      leisure/common:
        # leisure=common
        name: Common
        # 'terms: open space'
        terms: "<translate with synonyms or related terms for 'Common', separated by commas>"
      leisure/dog_park:
        # leisure=dog_park
        name: Dog Park
        terms: "<translate with synonyms or related terms for 'Dog Park', separated by commas>"
      leisure/firepit:
        # leisure=firepit
        name: Firepit
        # 'terms: fireplace,campfire'
        terms: "<translate with synonyms or related terms for 'Firepit', separated by commas>"
      leisure/garden:
        # leisure=garden
        name: Garden
        terms: "<translate with synonyms or related terms for 'Garden', separated by commas>"
      leisure/golf_course:
        # leisure=golf_course
        name: Golf Course
        # 'terms: links'
        terms: "<translate with synonyms or related terms for 'Golf Course', separated by commas>"
      leisure/ice_rink:
        # leisure=ice_rink
        name: Ice Rink
        # 'terms: hockey,skating,curling'
        terms: "<translate with synonyms or related terms for 'Ice Rink', separated by commas>"
      leisure/marina:
        # leisure=marina
        name: Marina
        # 'terms: boat'
        terms: "<translate with synonyms or related terms for 'Marina', separated by commas>"
      leisure/nature_reserve:
        # leisure=nature_reserve
        name: Nature Reserve
        # 'terms: protected,wildlife'
        terms: "<translate with synonyms or related terms for 'Nature Reserve', separated by commas>"
      leisure/park:
        # leisure=park
        name: Park
        # 'terms: esplanade,estate,forest,garden,grass,green,grounds,lawn,lot,meadow,parkland,place,playground,plaza,pleasure garden,recreation area,square,tract,village green,woodland'
        terms: "<translate with synonyms or related terms for 'Park', separated by commas>"
      leisure/picnic_table:
        # leisure=picnic_table
        name: Picnic Table
        # 'terms: bench'
        terms: "<translate with synonyms or related terms for 'Picnic Table', separated by commas>"
      leisure/pitch:
        # leisure=pitch
        name: Sport Pitch
        # 'terms: field'
        terms: "<translate with synonyms or related terms for 'Sport Pitch', separated by commas>"
      leisure/playground:
        # leisure=playground
        name: Playground
        # 'terms: jungle gym,play area'
        terms: "<translate with synonyms or related terms for 'Playground', separated by commas>"
      leisure/running_track:
        # 'leisure=track, sport=running'
        name: Running Track
        terms: "<translate with synonyms or related terms for 'Running Track', separated by commas>"
      leisure/slipway:
        # leisure=slipway
        name: Slipway
        # 'terms: boat launch,boat ramp'
        terms: "<translate with synonyms or related terms for 'Slipway', separated by commas>"
      leisure/sports_centre:
        # leisure=sports_centre
        name: Sports Center / Gym
        # 'terms: gym'
        terms: "<translate with synonyms or related terms for 'Sports Center / Gym', separated by commas>"
      leisure/sports_centre/swimming:
        # 'leisure=sports_centre, sport=swimming'
        name: Swimming Pool Facility
        # 'terms: dive,water'
        terms: "<translate with synonyms or related terms for 'Swimming Pool Facility', separated by commas>"
      leisure/stadium:
        # leisure=stadium
        name: Stadium
        terms: "<translate with synonyms or related terms for 'Stadium', separated by commas>"
      leisure/swimming_pool:
        # leisure=swimming_pool
        name: Swimming Pool
        # 'terms: dive,water'
        terms: "<translate with synonyms or related terms for 'Swimming Pool', separated by commas>"
      leisure/track:
        # leisure=track
        name: Racetrack (non-Motorsport)
        terms: "<translate with synonyms or related terms for 'Racetrack (non-Motorsport)', separated by commas>"
      leisure/water_park:
        # leisure=water_park
        name: Water Park
        # 'terms: swim,pool,dive'
        terms: "<translate with synonyms or related terms for 'Water Park', separated by commas>"
      leisure/wegotooo:
        # test=wegotooo
        name: wegotooo
        terms: "<translate with synonyms or related terms for 'wegotooo', separated by commas>"
      line:
        name: Line
        terms: "<translate with synonyms or related terms for 'Line', separated by commas>"
      point:
        name: Point
        terms: "<translate with synonyms or related terms for 'Point', separated by commas>"
      public_transport/platform:
        # public_transport=platform
        name: Platform
        terms: "<translate with synonyms or related terms for 'Platform', separated by commas>"
      public_transport/stop_position:
        # public_transport=stop_position
        name: Stop Position
        terms: "<translate with synonyms or related terms for 'Stop Position', separated by commas>"
      railway:
        # 'railway=*'
        name: Railway
        terms: "<translate with synonyms or related terms for 'Railway', separated by commas>"
      railway/abandoned:
        # railway=abandoned
        name: Abandoned Railway
        terms: "<translate with synonyms or related terms for 'Abandoned Railway', separated by commas>"
      railway/disused:
        # railway=disused
        name: Disused Railway
        terms: "<translate with synonyms or related terms for 'Disused Railway', separated by commas>"
      railway/funicular:
        # railway=funicular
        name: Funicular
        # 'terms: venicular,cliff railway,cable car,cable railway,funicular railway'
        terms: "<translate with synonyms or related terms for 'Funicular', separated by commas>"
      railway/halt:
        # railway=halt
        name: Railway Halt
        # 'terms: break,interrupt,rest,wait,interruption'
        terms: "<translate with synonyms or related terms for 'Railway Halt', separated by commas>"
      railway/level_crossing:
        # railway=level_crossing
        name: Railway Crossing
        # 'terms: crossing,railroad crossing,level crossing,grade crossing,road through railroad,train crossing'
        terms: "<translate with synonyms or related terms for 'Railway Crossing', separated by commas>"
      railway/monorail:
        # railway=monorail
        name: Monorail
        terms: "<translate with synonyms or related terms for 'Monorail', separated by commas>"
      railway/narrow_gauge:
        # railway=narrow_gauge
        name: Narrow Gauge Rail
        # 'terms: narrow gauge railway,narrow gauge railroad'
        terms: "<translate with synonyms or related terms for 'Narrow Gauge Rail', separated by commas>"
      railway/platform:
        # railway=platform
        name: Railway Platform
        terms: "<translate with synonyms or related terms for 'Railway Platform', separated by commas>"
      railway/rail:
        # railway=rail
        name: Rail
        terms: "<translate with synonyms or related terms for 'Rail', separated by commas>"
      railway/station:
        # railway=station
        name: Railway Station
        # 'terms: train station,station'
        terms: "<translate with synonyms or related terms for 'Railway Station', separated by commas>"
      railway/subway:
        # railway=subway
        name: Subway
        terms: "<translate with synonyms or related terms for 'Subway', separated by commas>"
      railway/subway_entrance:
        # railway=subway_entrance
        name: Subway Entrance
        terms: "<translate with synonyms or related terms for 'Subway Entrance', separated by commas>"
      railway/tram:
        # railway=tram
        name: Tram
        # 'terms: streetcar'
        terms: "<translate with synonyms or related terms for 'Tram', separated by commas>"
      relation:
        name: Relation
        terms: "<translate with synonyms or related terms for 'Relation', separated by commas>"
      roundabout:
        # junction=roundabout
        name: Roundabout
        terms: "<translate with synonyms or related terms for 'Roundabout', separated by commas>"
      type/boundary/administrative:
        # 'type=boundary, boundary=administrative'
        name: Administrative Boundary
        terms: "<translate with synonyms or related terms for 'Administrative Boundary', separated by commas>"
      type/restriction/no_left_turn:
        # 'type=restriction, restriction=no_left_turn'
        name: No Left Turn
        terms: "<translate with synonyms or related terms for 'No Left Turn', separated by commas>"
      type/restriction/no_right_turn:
        # 'type=restriction, restriction=no_right_turn'
        name: No Right Turn
        terms: "<translate with synonyms or related terms for 'No Right Turn', separated by commas>"
      type/restriction/no_straight_on:
        # 'type=restriction, restriction=no_straight_on'
        name: No Straight On
        terms: "<translate with synonyms or related terms for 'No Straight On', separated by commas>"
      type/restriction/no_u_turn:
        # 'type=restriction, restriction=no_u_turn'
        name: No U-turn
        terms: "<translate with synonyms or related terms for 'No U-turn', separated by commas>"
      type/restriction/only_left_turn:
        # 'type=restriction, restriction=only_left_turn'
        name: Left Turn Only
        terms: "<translate with synonyms or related terms for 'Left Turn Only', separated by commas>"
      type/restriction/only_right_turn:
        # 'type=restriction, restriction=only_right_turn'
        name: Right Turn Only
        terms: "<translate with synonyms or related terms for 'Right Turn Only', separated by commas>"
      type/restriction/only_straight_on:
        # 'type=restriction, restriction=only_straight_on'
        name: No Turns
        terms: "<translate with synonyms or related terms for 'No Turns', separated by commas>"
      vertex:
        name: Other
        terms: "<translate with synonyms or related terms for 'Other', separated by commas>"
